{{ lambda_name }}ApiMethod:
  Type: AWS::ApiGateway::Method
  Properties:
    ApiKeyRequired: False
    AuthorizationType: NONE
    HttpMethod: POST
    Integration: 
      IntegrationHttpMethod: POST
      Type: AWS_PROXY
      Uri: 
        Fn::Sub: "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:${AccountId}:function:{{ lambda_name }}/invocations"
    OperationName: {{ lambda_name }}
    ResourceId:
      Ref: apiResource
    RestApiId:
      Ref: apiGateway

{{ lambda_name }}ApiGatewayInvoke:
  Type: "AWS::Lambda::Permission"
  DependsOn:
    - {{ lambda_name }}LambdaFunction
  Properties:
    Action: "lambda:InvokeFunction"
    FunctionName: 
      Fn::Sub: arn:aws:lambda:${Region}:${AccountId}:function:{{ lambda_name }}-${Environment} # [lambdaFunction, Arn]
    Principal: apigateway.amazonaws.com
    SourceArn:
      Fn::Sub: "arn:aws:execute-api:${Region}:${AccountId}:${apiGateway}/*"

{{ lambda_name }}LambdaFunction:
  Type: AWS::Lambda::Function
  Properties: 
    Code: 
      ZipFile: {{ code }}
    FunctionName: 
      Fn::Sub: "{{ lambda_name }}-${Environment}"
    Handler: "index.handler"
    Role:
      Fn::Sub: "arn:aws:iam::${AccountId}:role/service-role/infra-test-reply-message-role-ygzuoc99"
    Runtime: nodejs12.x